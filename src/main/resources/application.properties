# Configuracion DataSource Postgres
quarkus.datasource.username = ${USER_DB_OFICINAVIRTUAL}
quarkus.datasource.password = ${PASSWORD_DB_OFICINAVIRTUAL}
quarkus.datasource.jdbc.url = ${URL_DB_OFICINAVIRTUAL}
quarkus.datasource.db-kind = postgresql
quarkus.hibernate-orm.database.generation=none

#Secreto bbdd
quarkus.kubernetes.env.mapping.usuario-db-oficinavirtual.from-secret=secreto-db-siatoficinavirtual
quarkus.kubernetes.env.mapping.usuario-db-oficinavirtual.with-key=usuario
quarkus.kubernetes.env.mapping.password-db-oficinavirtual.from-secret=secreto-db-siatoficinavirtual
quarkus.kubernetes.env.mapping.password-db-oficinavirtual.with-key=clave
quarkus.kubernetes.env.mapping.url-db-oficinavirtual.from-secret=secreto-db-siatoficinavirtual
quarkus.kubernetes.env.mapping.url-db-oficinavirtual.with-key=dburl

# Log Console
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c] (%t) %s%e%n

# Open Tracing
quarkus.jaeger.agent-host-port=${JAEGER_HOST_PORT}
quarkus.kubernetes.env.mapping.jaeger-host-port.from-configmap=mapa-jaeger
quarkus.kubernetes.env.mapping.jaeger-host-port.with-key=host-port
quarkus.jaeger.service-name=//${quarkus.application.name}
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

# Configuracion GELF
quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.level=WARN
quarkus.log.handler.gelf.include-full-mdc=true
quarkus.log.handler.gelf.extract-stack-trace=true
quarkus.log.handler.gelf.stack-trace-throwable-reference=-1
quarkus.log.handler.gelf.additional-field."microservice".value=//${quarkus.application.name}
quarkus.log.handler.gelf.additional-field."microservice".type=string

quarkus.log.handler.gelf.host=${GELF_HOST}
quarkus.kubernetes.env.mapping.gelf-host.from-configmap=mapa-gelf
quarkus.kubernetes.env.mapping.gelf-host.with-key=host

quarkus.log.handler.gelf.port=${GELF_PORT}
quarkus.kubernetes.env.mapping.gelf-port.from-configmap=mapa-gelf
quarkus.kubernetes.env.mapping.gelf-port.with-key=port

# Configuraciones de Elasticsearch
quarkus.elasticsearch.hosts = ${HOSTS_ELASTICSEARCH}
quarkus.elasticsearch.username = ${USERNAME_ELASTICSEARCH}
quarkus.elasticsearch.password = ${PASSWORD_ELASTICSEARCH}